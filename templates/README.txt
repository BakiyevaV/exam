Описание проекта:
	Этот проект представляет собой сайт-форум, где пользователи могут читать и публиковать статьи на различные темы, оставлять комментарии, лайки и эмоции, подписываться 	на интересующих авторов и добавлять их в черный список. Пользователи могут управлять своими публикациями (редактировать и удалять статьи) и получают уведомления по 	электронной почте в соответствии со сценарием.


Функциональные возможности (на текущий момент):
	-Чтение и публикация статей: Пользователи могут просматривать и публиковать статьи на форуме.
	-Комментарии и эмоции: Возможность оставлять комментарии к статьям и выражать эмоции.
	-Лайки: Пользователи могут лайкать статьи, поддерживая любимый контент.
	-Подписки на авторов: Пользователи могут подписываться на авторов, чтобы следить за их публикациями.
	-Черный список: Возможность добавлять авторов в черный список для игнорирования их контента.
	-Управление публикациями: Пользователи могут редактировать и удалять свои статьи.
	-Уведомления по электронной почте: Пользователи получают уведомления о новых комментариях, лайках и других действиях по электронной почте.


# Код проекта не окончательный. Планируется следующий план мероприятий (порядок приведен в порядке приоритетности):
	-Устранение багов. Замечено падение сайта при переходе на определенные сайты без авторизации.
	-Написание шаблона страницы для отображения уведомлений. Создание модели уведомлений и соответствующие контроллеры.
	-Добавление возможности сменить пароль пользователя.
	-Добавление страницы администратора для обработки обращений пользователей.
	-Подключение реального почтового сервиса. На данный момент используется mailtrap
	-Подключение авторизации через социальные сети.
	

Технологии:
	Backend: Django
	Frontend: Встроенный в Django шаблонизатор
	База данных: PostgreSQL
	Контейнеризация: Docker, Docker Compose

# Также не окончательный список технологий. Планируется:
	-Добавление балансировщика Nginx
	-Завершение настройки контейнеризации (На данный момент работает через Docker Compose без балансировщика, имитируя поведение локальной машины)

# Презентация будет дополняться по мере завершения вышеизложенных планов/задач. 
Ссылка на код в git: https://github.com/BakiyevaV/exam/tree/master. 
